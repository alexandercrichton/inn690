<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<title>Simulation Management</title>
	<script type="text/javascript" src="http://code.jquery.com/jquery.min.js"></script>
	<style type="text/css">
		h1, h2, h3, h4, a
	{
		font-family:"Palatino Linotype", "Book Antiqua", Palatino, serif
	}

	h1 
	{
		margin-left:10px;
	}
	
	p
	{
		font-family: Verdana, Geneva, sans-serif;
		font-size:12px;
		padding:5px;
	}
	
	button
	{
		padding:5px;
		margin:3px;
	}
	
	
	.navigation
	{
		background:#09C;
		height:35px;
		margin:none;
		font-color:white;
		padding-left:10px;
		padding-top:10px;
	}	

	.navigation ul
	{
		margin:0;
		padding:0;
		list-style:none;
	}

	.navigation li
	{
		display:inline;
		margin:0;
		padding:0;
	}

	.navigation a
	{
		color:#FFF;
		margin-left:0.5em;
		text-decoration:none
	}
	
	.function
	{
		border:1px solid #CCC;
		margin:1.5em;
		position: relative;
		padding:20px 5px 5px;
	}
	
	.function h2
	{
		position: absolute;
		top: -20px;
		background: #FFF;
		padding:5px;
		margin:0px 1px 5px 10px;
		float:left;
		font-size:20px;
	}	#sim-status
	{
		margin:0;
	} #cases label
	{
		display:block;
		vertical-align:middle;
		margin:0;
		clear:left;
	}	#cases label input
	{
		margin-right: 15px;
	} #participants select
	{
		display:block;
		clear:left;
	}
	</style>
</head>

<body>
<s:viewdata 
	uuid="string"
	AvailableSpecifications="System.Collections.Generic.IEnumerable<string>"
	AvailableRoles="System.Collections.Generic.IEnumerable<string>"
	IsInitialised="bool"
	IsRunningCases="bool"
	Role="string"
/>
<div class="navigation">
	<ul>
		<li><a href="/Work/Show/?uuid=${uuid}">Worklist</a></li>
	</ul>
</div>

<div id="content">
	<h1>Simulation Management</h1>

	<div class="function">
		<h2>Simulation</h2>
		<p id="sim-status">Cannot display status at this time</p>
		<button type="button" id="init-sim">Initialise</button>
		<button type="button" id="reset-sim">Reset Simulation</button>
	</div>

	<div id="cases" class="function">
		<h2>Specifications</h2>
		<s:for each='var line in AvailableSpecifications'>
			<label for="spec-${line}"><input type="radio" name="case" value="${line}" id="spec-${line}">${line}</label>  
		</s:for>
		<button type="button" id="launch-case">Launch Case</button>
		<button type="button" id="end-all-cases">End All Cases</button>
	</div>

	<div id="participants" class="function">
		<h2>Participation</h2>
		<s:if condition='Role == null'>
			<p id="current-role">Not registered as any role</p>
		</s:if>
		<s:else>
			<p id="current-role">Currently registered as ${Role}</p>
		</s:else>
		<select name="participant-list" id="participant-list">
		<s:for each='var line in AvailableRoles'>
			<option value="${line}">${line}</option>
		</s:for>
		</select>
		<button type="button" id="register">Register as Participant</button>
	</div>

</div>

<script type="text/javascript">
	$(document).ready(function() {
		
		var initialiseUrl = "/Simulation/Initialise/";
		var resetSimUrl = "/Simulation/Reset/";
		var launchCaseUrl = "/Simulation/LaunchCase/?";
		var endAllCasesUrl = "/Simulation/EndAllCases/";
		var registerUrl = "/Simulation/RegisterAsParticipant/?uuid=${uuid}"
		// var registerUrl = "/Simulation/RegisterAsParticipant/?uuid=9fa79ecf-40da-40d3-9b4c-cb8451efd90e&";

		determineInitialPageState();

		function initialiseSim () {
			$.post(initialiseUrl, function(data, status) {
					if (status == "success") {
						setStateThenReload(data);
					}
				}, "text"
			);
		}
		
		function resetSim() {
			$.post(resetSimUrl, function(data, status) {
					if (status == "success") {
						setStateThenReload(data);
					}
				}, "text"
			);
		}
		
		function launchCase(specification) {
			$.post(launchCaseUrl + "spec=" + encodeURIComponent(specification),  function(data, status) {
					if (status == "success") {
						setStateThenReload(data);
					}
				}, "text"
			);
		}
		
		function endAllCases() {
			$.post(endAllCasesUrl, function(data, status) {
					if (status == "success") {
						setStateThenReload(data);
					}
				}, "text"
			);
		}
		
		function registerParticipant(role) {
			$.post(registerUrl + "&role=" + encodeURIComponent(role), function(data, status) {
					if (status == "success") {
						setStateThenReload(data);
					}
				}, "text"
			);		
		}
		
		$('#init-sim').on("click", initialiseSim);
		$('#reset-sim').on("click", resetSim);
		$('#launch-case').on("click", function () { launchCase($('input:radio[name="case"]:checked').val()); });
		$('#end-all-cases').on("click", endAllCases);
		$('#register').on("click", function () { registerParticipant($('#participant-list').val()); });
		
		function setStateThenReload(message) {
			$('#sim-status').text(message).css("font-color", "#00A2E8");
			setTimeout(function() {
				window.location.reload();
			}, 1000);
		}
		
		function stateNotInitialised() {
			$('#sim-status').text("Simulation not initialised.").css("color", "#D93D3D");
		
			$('#init-sim').attr("disabled", false);
			$('#reset-sim').attr("disabled", true);
			$('#launch-case').attr("disabled", true);
			$('#end-all-cases').attr("disabled", true);
			$('#register').attr("disabled", true);
		}
		
		function stateNotRunningCase() {
			$('#sim-status').text("No case started.").css("color", "#00A2E8");
		
			$('#init-sim').attr("disabled", true);
			$('#reset-sim').attr("disabled", false);
			$('#launch-case').attr("disabled", false);
			$('#end-all-cases').attr("disabled", true);
			$('#register').attr("disabled", false);
		}
		
		function stateRunningCase(cases) {
			$('#sim-status').text("Running case.").css("color", "#32B341");
			
			$('#init-sim').attr("disabled", true);
			$('#reset-sim').attr("disabled", false);
			$('#launch-case').attr("disabled", true);
			$('#end-all-cases').attr("disabled", false);
			$('#register').attr("disabled", false);
		}
		
		function determineInitialPageState() {
			
			var isInitialised = modelToBool("${IsInitialised}");
			var isRunningCases = modelToBool("${IsRunningCases}");

			if (!isInitialised) {
				stateNotInitialised();
			}
			else {
				if (!isRunningCases) {
					stateNotRunningCase();
				}
				else {
					stateRunningCase();
				}
			}

		}
		
		function modelToBool(model) {
			if (model == "True") {
				return true;
			}
			else {
				return false;
			}
		}
		
	});
</script>
</body>

</html>
